{"edges":[{"label":"","source":"0","target":"9","id":"6","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"1","target":"9","id":"8","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"1","target":"11","id":"10","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"3","target":"9","id":"12","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"3","target":"11","id":"14","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"5","target":"9","id":"16","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"6","target":"9","id":"18","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"6","target":"14","id":"20","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"8","target":"9","id":"22","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"8","target":"11","id":"24","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"9","target":"10","id":"26","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"9","target":"12","id":"28","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"9","target":"15","id":"30","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"10","target":"14","id":"32","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"11","target":"12","id":"34","attributes":{},"color":"rgb(26, 98, 28)","size":1.0},{"label":"","source":"11","target":"15","id":"36","attributes":{},"color":"rgb(26, 98, 28)","size":1.0}],"nodes":[{"label":"COSC-241","x":3.0,"y":2.0,"id":"0","attributes":{"Title":"Artificial Intelligence","Description":"Listed in: \n, as COSC-241\nFormerly listed as: COSC-24\nMoodle site: \n (Section 01)\nAn introduction to the ideas and techniques that allow computers to\u00a0perform intelligently. The course will discuss methods of representing\u00a0knowledge and methods of solving general problems using heuristic search.\u00a0 It will also discuss the design of algorithms that learn and generalize from experience.\u00a0 Other topics will be chosen to reflect the interests of the class and may include: communicating in English, game playing, probabilistic reasoning, planning, vision and speech recognition, computers modeled on neurons, and the possibility and implications of the existence of non-human intelligence. Three class meetings per week. Offered in alternate years.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516F/COSC/COSC-241-1516F'> Course Site </a>","Requisite":["Requisite: COSC 112. Fall semester.\u00a0 Professor Rager."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-321","x":5.0,"y":3.0,"id":"1","attributes":{"Title":"Computer Graphics","Description":"Listed in: \n, as COSC-321\nFormerly listed as: COSC-32\n (Section 01)\nThis course will explore the algorithms used to create \u201crealistic\u201d three-dimensional computer images. Major topics will include object representations (polygons, curved surfaces, functional models), rendering algorithms (perspective transformations, hidden-surface removal, reflectance and illumination, shadows, texturing), and implementation techniques (scan conversion, ray tracing, radiosity). Students will create images using Pixar's Renderman.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516S/COSC/COSC-321-1516S'> Course Site </a>","Requisite":["Requisite: COSC 112 or 201 or consent of the instructor.\u00a0 Spring semester. Professor Rager."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-401","x":10.0,"y":4.0,"id":"2","attributes":{"Title":"Theoretical Foundations of Computer Science","Description":"Listed in: \n, as COSC-401\nFormerly listed as: COSC-38\nMoodle site: \n (Section 01)\nThis course covers basic mathematical concepts that are essential in computer science, and then uses them to teach the theory of formal languages and machine models of languages. The notion of computability will be introduced in order to discuss undecidable problems. The topics covered include: regular, context-free and context-sensitive languages, finite state automata, Turing machines, decidability, and computational complexity. Offered in alternate years.\n0","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1415S/COSC/COSC-401-1415S'> Course Site </a>","Requisite":["Requisite: None, although analytical aptitude is essential. Spring semester.\u00a0 Professor Glenn."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-281","x":7.0,"y":2.0,"id":"3","attributes":{"Title":"Networks and Cryptography","Description":"Listed in: \n, as COSC-281\nFormerly listed as: COSC-27\u00a0 | \u00a0COSC-28\u00a0 | \u00a0COSC-29\nMoodle site: \n (Section 01)\nComputing networks have fundamentally changed the ways in which we use computers. The ubiquity of networks and their broad range of uses have created substantial challenges in the area of computer communication. Not only must data be delivered quickly and reliably from one computer to another, but in many cases that data must also be secure from eavesdroppers. Moreover, the recipient of the information often needs to be sure of the identity of the sender. Encryption can be used to achieve both security and authentication of information. This course will begin with the problem of communicating between two computers, followed by the problem of building generalized networks for an arbitrary number of computers. Networking topics will include layered network structure, signaling methods, error detection and correction, flow control, routing, and protocol design and verification. We will then examine in detail a variety of encryption schemes, how they can be used, and how secure they are. Cryptographic topics will include classical cryptosystems, the data encryption standard, public-key cryptography, key escrow systems, and public policy on encryption. Offered in alternate years.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1415S/COSC/COSC-281-1415S'> Course Site </a>","Requisite":["Requisite: COSC 112 or 201. Spring semester.\u00a0 Profesor Kaplan."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-331","x":11.0,"y":3.0,"id":"4","attributes":{"Title":"Games","Description":"Listed in: \n, as COSC-331\nMoodle site: \n (Section 01)\nThis course examines the theory of games in all forms, including traditional non-cooperative simultaneous-play games and their relevance to economics, psychology, and biology; iterated games; combinatorial games such as chess, checkers, and Go; imperfect information games; and stochastic games.\u00a0 The course also considers data structures and algorithms relevant to games, the computational complexity of games, and the use of techniques from artificial intelligence to compute strategies when it is infeasible to compute the optimal strategy.\u00a0 Students will have an opportunity to develop games that incorporate AI and theory.\nRequisites: COSC 112 and 201. Fall semester. Visiting Professor Glenn.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1415F/COSC/COSC-331-1415F'> Course Site </a>","Requisite":[]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-231","x":9.0,"y":2.0,"id":"5","attributes":{"Title":"Programming Language Paradigms","Description":"Listed in: \n, as COSC-231\nFormerly listed as: COSC-23\n (Section 01)\nThe main purpose of a programming language is to provide a natural way to express algorithms and computational structures. The meaning of \u201cnatural\u201d here is controversial and has produced several distinct language paradigms; furthermore the languages themselves have shaped our understanding of the nature of computation and of human thought processes. We will explore some of these paradigms and discuss the major ideas underlying language design. Several languages will be introduced to illustrate ideas developed in the course. Topics will include functional programming, declarative programming, and programming for concurrency and distributed computing. Offered in alternate years.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516S/COSC/COSC-231-1516S'> Course Site </a>","Requisite":["Requisite: COSC 112.\u00a0 Spring semester.\u00a0 Professor Glenn."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-371","x":0.0,"y":3.0,"id":"6","attributes":{"Title":"Compiler Design","Description":"Listed in: \n, as COSC-371\nFormerly listed as: COSC-37\nMoodle site: \n (Section 01)\nAn introduction to the principles of the design of compilers, which are translators that convert programs from a source language to a target language. Some compilers take programs written in a general-purpose programming language, such as C, and produce equivalent assembly language programs. Other compilers handle specialized languages. For instance, text processors translate input text into low-level printing commands. This course examines techniques and principles that can be applied to the design of any compiler. Formal language theory (concerning regular sets and context-free grammars) is applied to solve the practical problem of analyzing source programs.\nTopics include: lexical analysis, syntactic analysis (parsing), semantic analysis, translation, symbol tables, run-time environments, code generation, optimization, and error handling. Each student will design and implement a compiler for a small language. Offered in alternate years.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516F/COSC/COSC-371-1516F'> Course Site </a>","Requisite":["Requisite: COSC 112 and 161. Fall semester.\u00a0 Professor L. McGeoch."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-450","x":12.0,"y":4.0,"id":"7","attributes":{"Title":"Seminar in Computer Science","Description":"Listed in: \n, as COSC-450\nFormerly listed as: COSC-40\nMoodle site: \n (Section 01)\nThe topic changes from year to year. For fall 2014, the topic is \"Computational Biology.\" This course examines the central computational challenges that have emerged since the publication of the human genome sequence in 2001. The enormous volume of genetic and genomic data collected by biologists has required the development of sophisticated computational techniques to analyze it. This course presents the formulation of these biological data analysis challenges as computational problems. Topics may include: de novo genome sequence assembly, sequence alignment, gene finding and motif discovery, analysis of genome rearrangements, phylogenetic tree reconstruction, and protein folding. The course emphasizes how these problems can be addressed using classical computational problem-solving paradigms, including: greedy techniques, dynamic programming, hidden Markov models, expectation-maximization, and combinatorial algorithms. Assignments will include both problem sets and programming projects.\nFor spring 2015 the topic is \"Digital Text Analysis.\" Computers allow scholars to examine texts in ways that would be difficult or impossible without them. This course will examine some of the ways that computers are aiding text analysis. We will study both examples of close reading \u2013 in which the computer is used to suggest ways to look at the texts \u2013 and distant reading \u2013 in which the computer analysis is used to draw conclusions without detailed reading of the texts.\u00a0 The course will discuss both applications of computer techniques and the algorithms used in the techniques.\u00a0 Some of the work will involve the digital collections of the Folger Shakespeare Library, and members of the staff of the library will be involved in the course. The students will do group projects.\nFall semester:\u00a0 Professor Valentine. Spring semester: Professor Rager. Spring semester enrollment limited to 12.\nThe students will be chosen to create a balance between humanities and computer science majors ","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1415S/COSC/COSC-450-1415S'> Course Site </a>","Requisite":[]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-301","x":4.0,"y":3.0,"id":"8","attributes":{"Title":"Data Structures and Algorithms II","Description":"Listed in: \n, as COSC-301\nFormerly listed as: COSC-21\u00a0 | \u00a0COSC-30\u00a0 | \u00a0COSC-31\nMoodle site: \n (Section 01)\nThis course continues the exploration of data structures and algorithms that is begun in COSC 201. Topics include balanced search trees, amortized algorithms, graph data structures and algorithms, greedy algorithms, dynamic programming algorithms, NP completeness, and case studies in algorithm design.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516F/COSC/COSC-301-1516F'> Course Site </a>","Requisite":["Requisite: COSC 112 and 201. Fall semester.\u00a0 Professor Glenn."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-112","x":4.0,"y":1.0,"id":"9","attributes":{"Title":"Introduction to Computer Science II","Description":"Listed in: \n, as COSC-112\nFormerly listed as: COSC-12\n (Section 01)\nA continuation of COSC 111. This course will emphasize more complicated problems and their algorithmic solutions. The object-oriented programming paradigm will be discussed in detail, including data abstraction, inheritance and polymorphism. Other topics will include linked lists and trees and the use of finite-state machines in algorithm design. A laboratory section will meet once a week to give students practice with programming constructs. Two class hours and one one-hour laboratory per week.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516S/COSC/COSC-112-1516S'> Course Site </a>","Requisite":["Requisite: COSC 111 or consent of the instructor. This course is the appropriate starting point for most students with some prior programming experience. Fall and spring semester. Professor Rager."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-261","x":8.0,"y":2.0,"id":"10","attributes":{"Title":"Computer Systems II","Description":"Listed in: \n, as COSC-261\nFormerly listed as: COSC-26\n (Section 01)\nThis course will examine the principles and design choices involved in creating the software and hardware systems on which ordinary computer programs rely. It will develop advanced topics in computer processor architecture, cover the design of operating systems and runtime systems, and provide an introduction to programming language compilers. Architectural topics will include pipelines, out-of-order execution, symmetric multithreading, and multi-core cache management. Topics in operating and runtime systems will include virtual memory, file systems, linkers and loaders, virtual machines, memory allocators, and garbage collectors. Projects will involve the implementation of key concepts and structures.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516S/COSC/COSC-261-1516S'> Course Site </a>","Requisite":["Requisite: COSC 112 and 161. Spring semester. Professor Kaplan."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-201","x":5.0,"y":2.0,"id":"11","attributes":{"Title":"Data Structures and Algorithms I","Description":"Listed in: \n, as COSC-201\nFormerly listed as: COSC-20\u00a0 | \u00a0COSC-21\n (Section 01)\n (Section 02)\nThis course is the first part of a two-semester sequence examining data structures (ways of organizing data so that it can be used effectively) and algorithms (the methods that can be used to manipulate data). The use of appropriate data structures and algorithms can often dramatically reduce the computational work needed to solve a problem. Topics examined in this course will include proof techniques, run-time analysis, heaps, hash tables, sorting, searching, and divide-and-conquer algorithms. The course will provide advanced programming experience and will emphasize the use of abstraction in program design.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516S/COSC/COSC-201-1516S'> Course Site </a>","Requisite":["Requisite: COSC 111. Spring semester. Professors L. McGeoch and Glenn."]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-111","x":5.0,"y":1.0,"id":"12","attributes":{"Title":"Introduction to Computer Science I","Description":"Listed in: \n, as COSC-111\nFormerly listed as: COSC-11\n (Section 02)\n (Section 01)\nThis course introduces ideas and techniques that are fundamental to computer science. The course emphasizes procedural abstraction, algorithmic methods, and structured design techniques. Students will gain a working knowledge of a block-structured programming language and will use the language to solve a variety of problems illustrating ideas in computer science. A selection of other elementary topics will be presented, for example: the historical development of computers, comparison and evaluation of programming languages, and artificial intelligence. A laboratory section will meet once a week to give students practice with programming constructs. Two class hours and one one-hour laboratory per week.\u00a0\nRestricted to Amherst College students. Limited to 40 students per class (20 per section). Fall and spring semesters. The Department.\nPreference to first year and sophomore students. ","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516S/COSC/COSC-111-1516S'> Course Site </a>","Requisite":[]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-352","x":13.0,"y":3.0,"id":"13","attributes":{"Title":"Big Data","Description":"Listed in: \n, as COSC-352\nMoodle site: \n (Section 01)\nThe recent explosion in the volume of data being collected and curated by computer systems is making possible a new understanding of human behavior and other natural phenomena.\u00a0 This dramatic growth is also challenging traditional data storage and manipulation paradigms.\u00a0 In particular, the growth in the collection and storage of so-called \u201cunstructured\u201d data has precipitated the development of new database technologies.\u00a0 Unlike traditional relational data storage, these so-called NoSQL databases are optimized for the storage and analysis of hierarchical or otherwise non-tabular data in what are often distributed layouts.\u00a0 The course will explore this dramatic paradigm shift by examining the inherent limitations of traditional relational databases and how the newer class of databases proposes to address these limitations.\u00a0 Projects will center around experimental comparisons of relational database operations to operations implemented in the Map Reduce paradigm.\u00a0 Offered in alternate years.\nRequisites: COSC 112 and 201. Spring semester. Professor Valentine.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1415S/COSC/COSC-352-1415S'> Course Site </a>","Requisite":[]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-161","x":0.0,"y":1.0,"id":"14","attributes":{"Title":"Computer Systems I","Description":"Listed in: \n, as COSC-161\nFormerly listed as: COSC-14\u00a0 | \u00a0COSC-16\nMoodle site: \n (Section 01)\nThis course will provide an introduction to computer systems, stressing how computers work. Beginning with Boolean logic and the design of combinational and sequential circuits, the course will discuss the design of computer hardware components, microprocessing and the interpretation of machine instructions, assembly languages, and basic machine architecture. The course will also introduce operating systems topics, basic memory management, and topics in network communication. Projects will include the design of digital circuits and the simulation of operating system and network processes.\nThis course has no requisite and no programming experience is required.\u00a0Fall semester. Professor Kaplan.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516F/COSC/COSC-161-1516F'> Course Site </a>","Requisite":[]},"color":"rgb(26, 98, 28)","size":10.0},{"label":"COSC-251","x":2.0,"y":2.0,"id":"15","attributes":{"Title":"Principles of Database Design","Description":"Listed in: \n, as COSC-251\n (Section 01)\nDatabases underlie many of the applications with which we interact on a daily basis. They form the foundation behind many websites, telecommunications systems, banking systems, and any applications that need to maintain persistent data. This course will explore the design of modern databases for storing structured data. We will discuss the relational data model and relational algebra. Other key topics will include index data structures, views, transactions, and online analytical processing.\u00a0 The course will also consider the design of NoSQL databases and the implications of the CAP theorem.","Department Code":"COSC","Course Site":"<a href= 'http://www.amherst.edu/academiclife/departments/courses/1516S/COSC/COSC-251-1516S'> Course Site </a>","Requisite":["Requisite: COSC 112 and COSC 201. Spring semester. Professor Valentine."]},"color":"rgb(26, 98, 28)","size":10.0}]}